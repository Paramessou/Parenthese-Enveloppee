{% extends 'base.html.twig' %}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/calendrier.css') }}">
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
{% endblock %}

{% block title %}Prenez rendez-vous{% endblock %}

{% block body %}
    <div class="rdvForm">
    <h1>Prenez rendez-vous</h1>
    {% for message in app.flashes('error') %}
			<div class="alert alert-error">
				{{ message }}
			</div>
		{% endfor %}

    {{ include('appointment/_form.html.twig') }}

    <a href="{{ path('app_calendar') }}">Retour au calendrier</a>
    </div>
{% endblock %}
{% block javascripts %}
<script>
    function toLocalISOString(date) {
        var tpscompense = date.getTimezoneOffset() * 60000; // décalage horaire en millisecondes
        var localISOTime = (new Date(date - tpscompense)).toISOString().slice(0, -1); // conversion en ISO et suppression du Z final
        return localISOTime; 
    }
    
    $(document).on('change', '#appointment_debut_date, #appointment_debut_time, #appointment_serviceId', function() {
        //console.log('Lancement de la fonction change');
        var debutDate = $('#appointment_debut_date').val(); // récupération de la date de début
        var debutTime = $('#appointment_debut_time').val(); // récupération de l'heure de début
        var duration = $('#appointment_serviceId option:selected').data('duration'); // récupération de la durée du service
        /*console.log('Valeur de debutDate : ' + debutDate);
        console.log('Valeur de debutTime : ' + debutTime);
        console.log('Valeur de duration : ' + duration);*/
        if (debutDate && debutTime && duration) { // si les 3 variables sont définies
            //console.log('Début et durée sont définis');
            var debut = new Date(debutDate + 'T' + debutTime); // création d'un objet date avec la date et l'heure de début
            var fin = new Date(debut); // création d'un objet date avec la date et l'heure de début
            fin.setMinutes(debut.getMinutes() + parseInt(duration)); // ajout de la durée au début pour obtenir la fin
            /*console.log('Valeur de fin : ' + fin);
            console.log('Valeur de fin.getMinutes() : ' + fin.getMinutes());
            console.log('Valeur parseint de duration : ' + parseInt(duration));*/
            var finISO = toLocalISOString(fin).slice(0, 16); // conversion de la date de fin en ISO
            $('#appointment_fin_date').val(finISO.split('T')[0]); // affectation de la date de fin au champ de formulaire
            $('#appointment_fin_time').val(finISO.split('T')[1]); // affectation de l'heure de fin au champ de formulaire
            //console.log('Fin : ' + finISO);
            var finInput = $('<input>').attr({
                type: 'hidden',
                id: 'appointment_fin',
                name: 'appointment_fin',
                value: finISO
            });
            $('form').append(finInput);
        }
    });
    $(document).ready(function() {
        //console.log('Lancement de la fonction onload');
        var serviceId = $('#appointment_serviceId'); // récupération du champ de formulaire
        if (serviceId.length) { // si le champ existe
            //console.log('serviceId existe');
            serviceId.trigger('change'); // déclenchement de l'événement change
            //console.log('Lancement de la fonction change');
        }
        //console.log('Fin de la fonction onload');
    });
</script>
{% endblock %}